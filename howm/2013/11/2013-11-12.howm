= xctestについて文書を読む
[2013-11-12 11:16] 

about continuous integration in xcode

https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/xcode_guide-continuous_integration/000-About_Continuous_Integration/about_continuous_integration.html#//apple_ref/doc/uid/TP40013292-CH1-SW1

 xcodeはxcode serviceを通じてciをサポート。os x serverで利用可能なxcode serviceは、ビルド、解析、テスト、アーカイブの自動化を行える。開発マシンでbotを作成し、そのbotが遠隔サーバでciを実現。何かしらfailure起こると、失敗のコードのコミッタに通知が行く。

install and set up the xcode service
https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/xcode_guide-continuous_integration/200-Adopting_a_Continuous_Integration_Workflow/adopt_continuous_integration.html#//apple_ref/doc/uid/TP40013292-CH3-SW1

connect the xcode service to source code repositories
https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/xcode_guide-continuous_integration/PublishYourCodetoaSourceRepository/PublishYourCodetoaSourceRepository.html#//apple_ref/doc/uid/TP40013292-CH8-SW1

create and run bots
https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/xcode_guide-continuous_integration/ConfigureBots/ConfigureBots.html#//apple_ref/doc/uid/TP40013292-CH9-SW1

mointor and manage bots
https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/xcode_guide-continuous_integration/300-Working_with_Bots/view_integration_results.html#//apple_ref/doc/uid/TP40013292-CH4-SW1

https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/xcode_guide-continuous_integration/MonitorBotsandDownloadProductsfromaWebBrowser/MonitorBotsandDownloadProductsfromaWebBrowser.html#//apple_ref/doc/uid/TP40013292-CH10-SW1

◆testing in xcode 5(wwdc 2013 session)
http://devstreaming.apple.com/videos/wwdc/2013/409xdx4x4adcwca5ok0rtsup0sg/409/409.pdf

= Xcode 単体試験計画
[2013-11-12 13:55] 

■テストの種類
〔UT〕
・Logic Test
　XCTest
　OCTest
・Application Test
　XCTest
　OCTest

⇒XCTestはiOS6Targetでは使えない？本当？
　⇒

〔シナリオ〕
・UI Automation

■CIで、上記の試験を実施できる環境を作る。
・iOS 6
・iOS 7

= GOASTのUTの時に、pchファイルのパスがデフォルトの「GOAST/GOAST-Prefix.pch」になるバグの修正
[2013-11-12 14:40] 

・RunするとちゃんとConfiguration指定のパスが指定されてコンパイルされるのに、Testの時だけGOAST/GOAST-Prefix.pchにパスが通ってることになってコンパイルされる。

⇒テスト用Targetのプロジェクトファイルの設定がおかしかった。。。
　プロジェクトファイルの変更は、ターゲットが複数ある場合は要注意。

= iOS Native-Web基盤アプリ
[2013-11-12 15:23] 

目次

目的
成果物
　成果物一覧
　利用方法概要
　　svnよりco。サンプルプロジェクトはローカルのHTMLを表示して一通りの機能が体験できる。
　　READMEを読むこと。
　　単体試験コードはサンプルプロジェクト専用。⇒プロジェクトに合わせて適宜記述を変更すること。
機能一覧
　（表）
　ログ出力
　Native⇔Web を繋ぐ
　　Native⇒Web UIWebViewにevaluatingJavascriptString:
　　Web⇒Native requestをUIWebViewのshouldStartLoadingでキャッチして処理。（#クラス設計が鍵か）
　
設計方針
　class prefix : MI（Map Infra）
試験方針
　単体テスト
制約事項
　動作環境
　　iOS 6以降をTarget。
　ライセンスについて
　　ライセンスは

= 背景と目的
[2013-11-12 16:14] 

屋外での業務を行う際、業務に特化した情報を表示し、効率化を図るアプリケーションを望む声は増えつつある。一方、これらのアプリケーションを一から作成するための工数は膨大になりがちである。

上記背景をふまえ、業務で利用するアプリ制作のための

= 日時レビュー
[2013-11-12 19:20] 

√・Redmine整理
√・明日のGoogleカレンダーの予定をToodledoへ移行
√・メールのActionタグをチェック⇒タスク登録
√・明日のtoodledoのタスク割振り
・日報登録/作業実績表記入
・今日のタスクが明日に流れた原因を振り返りEvernoteへ登録
