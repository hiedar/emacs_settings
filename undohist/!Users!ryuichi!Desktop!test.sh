
((digest . "8213f27ce6d53512105708fd8adf754d") (undo-list nil (#("
" 0 1 (fontified t face font-lock-string-face)) . -179) (t 21015 9594 0 0) nil (#(" ￥”password:￥” {
    send ￥”（パスワード）￥r￥”
  }" 0 17 (fontified t) 17 43 (fontified t)) . -165) nil (149 . 157) nil (#("（" 0 1 (fontified t)) . -149) nil (#("パ" 0 1 (fontified t)) . -150) nil (#("ス" 0 1 (fontified t)) . -151) nil (#("ワ" 0 1 (fontified t)) . -152) nil (#("ー" 0 1 (fontified t)) . -153) nil (#("ド" 0 1 (fontified t)) . -154) nil (#("）" 0 1 (fontified t)) . 155) nil (#("    send ￥”yes￥r￥”
    expect ￥”password:￥”
" 0 19 (fontified t) 19 44 (fontified t)) . -138) nil (#("?" 0 1 (fontified t)) . 133) nil (#(")" 0 1 (fontified t)) . 133) nil (#("o" 0 1 (fontified t)) . 133) nil (#("n" 0 1 (fontified t)) . 133) nil (#("/" 0 1 (fontified t)) . 133) nil (#("s" 0 1 (fontified t)) . 133) nil (#("e" 0 1 (fontified t)) . 133) nil (#("y" 0 1 (fontified t)) . 133) nil (#("(" 0 1 (fontified t)) . 133) ((marker*) . 1) ((marker) . -1) ((marker*) . 1) nil (#(" " 0 1 (fontified t)) . 133) nil (#("g" 0 1 (fontified t)) . 133) nil (#("n" 0 1 (fontified t)) . 133) nil (#("i" 0 1 (fontified t)) . 133) nil (#("t" 0 1 (fontified t)) . 133) nil (#("c" 0 1 (fontified t)) . 133) nil (#("e" 0 1 (fontified t)) . 133) nil (#("n" 0 1 (fontified t)) . 133) nil (#("n" 0 1 (fontified t)) . 133) nil (#("o" 0 1 (fontified t)) . 133) nil (#("c" 0 1 (fontified t)) . 133) nil (#(" " 0 1 (fontified t)) . 133) nil (#("e" 0 1 (fontified t)) . 133) nil (#("u" 0 1 (fontified t)) . 133) nil (#("n" 0 1 (fontified t)) . 133) nil (#("i" 0 1 (fontified t)) . 133) nil (#("t" 0 1 (fontified t)) . 133) nil (#("n" 0 1 (fontified t)) . 133) nil (#("o" 0 1 (fontified t)) . 133) nil (#("c" 0 1 (fontified t)) . 133) nil (#(" " 0 1 (fontified t)) . 133) nil (#("o" 0 1 (fontified t)) . 133) nil (#("t" 0 1 (fontified t)) . 133) nil (#(" " 0 1 (fontified t)) . 133) nil (#("t" 0 1 (fontified t)) . 133) nil (#("n" 0 1 (fontified t)) . 133) nil (#("a" 0 1 (fontified t)) . 133) nil (#("w" 0 1 (fontified t)) . 133) nil (#(" " 0 1 (fontified t)) . 133) nil (#("u" 0 1 (fontified t)) . 133) nil (#("o" 0 1 (fontified t)) . 133) nil (#("y" 0 1 (fontified t)) . 133) nil (#(" " 0 1 (fontified t)) . 133) nil (#("e" 0 1 (fontified t)) . 133) nil (#("r" 0 1 (fontified t)) . 133) nil (#("u" 0 1 (fontified t)) . 133) nil (#("s" 0 1 (fontified t)) . 133) nil (#(" " 0 1 (fontified t)) . 133) nil (#("u" 0 1 (fontified t)) . 133) nil (#("o" 0 1 (fontified t)) . 133) nil (#("y" 0 1 (fontified t)) . 133) nil (#(" " 0 1 (fontified t)) . 133) nil (#("e" 0 1 (fontified t)) . 133) nil (#("r" 0 1 (fontified t)) . 133) nil (#("A" 0 1 (fontified t)) . 133) nil (nil rear-nonsticky nil 132 . 133) (nil fontified nil 104 . 133) (104 . 133) nil (88 . 90) nil (86 . 88) nil (#("c" 0 1 (fontified t)) . -86) nil (#("a" 0 1 (fontified t)) . -87) nil (78 . 88) nil (#("." 0 1 (fontified t)) . -78) nil (#("/" 0 1 (fontified t)) . -79) nil (77 . 80) nil (nil rear-nonsticky nil 76 . 77) (nil fontified nil 30 . 77) (30 . 77) nil (#("s" 0 1 (fontified t)) . -30) nil (#("c" 0 1 (fontified t)) . -31) nil (#("p" 0 1 (fontified t)) . -32) nil (#(" " 0 1 (fontified t)) . -33) nil (#("d" 0 1 (fontified t)) . -34) nil (#("a" 0 1 (fontified t)) . -35) nil (#("t" 0 1 (fontified t)) . -36) nil (#("a" 0 1 (fontified t)) . -37) nil (#("." 0 1 (fontified t)) . -38) nil (#("t" 0 1 (fontified t)) . -39) nil (#("x" 0 1 (fontified t)) . -40) nil (#("t" 0 1 (fontified t)) . -41) nil (#(" " 0 1 (fontified t)) . -42) nil (#("u" 0 1 (fontified t)) . -43) nil (#("s" 0 1 (fontified t)) . -44) nil (#("e" 0 1 (fontified t)) . -45) nil (#("r" 0 1 (fontified t)) . -46) nil (#("@" 0 1 (fontified t)) . -47) nil (#("1" 0 1 (fontified t)) . -48) nil (#("9" 0 1 (fontified t)) . -49) nil (#("2" 0 1 (fontified t)) . -50) nil (#("." 0 1 (fontified t)) . -51) nil (#("1" 0 1 (fontified t)) . -52) nil (#("6" 0 1 (fontified t)) . -53) nil (#("8" 0 1 (fontified t)) . -54) nil (#("." 0 1 (fontified t)) . -55) nil (#("0" 0 1 (fontified t)) . -56) nil (#("." 0 1 (fontified t)) . -57) nil (#("3" 0 1 (fontified t)) . -58) nil (#(":" 0 1 (fontified t)) . -59) nil (#("/" 0 1 (fontified t)) . -60) nil (#("t" 0 1 (fontified t)) . -61) nil (#("m" 0 1 (fontified t)) . -62) nil (#("p" 0 1 (fontified t)) . -63) nil (#("/" 0 1 (fontified t)) . -64) nil (11 . 12) nil (263 . 265) nil (nil rear-nonsticky nil 262 . 263) (nil fontified nil 1 . 263) (1 . 263) (#("#!/bin/bash

scp -P 22 " 0 12 (fontified t) 12 13 (fontified t) 13 23 (fontified t)) . 1) ((marker . 165) . -23) ((marker) . -12) ((marker) . -12) ((marker) . -13) ((marker) . -13) nil (14 . 24) nil (12 . 14) nil (1 . 12) nil (#(";; This buffer is for notes you don't want to save, and for Lisp evaluation.
;; If you want to create a file, visit that file with C-x C-f,
;; then enter the text in that file's own buffer.

" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 77 (fontified t face font-lock-comment-face) 77 80 (fontified t face font-lock-comment-delimiter-face) 80 140 (fontified t face font-lock-comment-face) 140 143 (fontified t face font-lock-comment-delimiter-face) 143 190 (fontified t face font-lock-comment-face) 190 191 (fontified t)) . 1) (t 0 0 0 -2000) ((marker . 167) . -191) ((marker . 167) . -191) ((marker . 165) . -191) ((marker . 1) . -191) ((marker . 1) . -191) nil (1 . 192) (t 0 0 0 -2000)))
